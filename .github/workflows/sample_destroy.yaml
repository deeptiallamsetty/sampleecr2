name: CI/CD Pipeline

on:
   workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Python 3.9
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt        

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22' # You can specify the version you need
    
    - name: Install Docker
      run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends apt-utils
          sudo apt-get install -y docker.io || sudo apt-get install -f 

    # Install Serverless and serverless-wsgi globally
    - name: Install Serverless and serverless-wsgi
      run: |
        npm install -g serverless
        npm install -g serverless-wsgi

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:        
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Log in to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    # - name: Build Docker image
    #   run: |
    #     echo "Building Docker image..."
    #     docker build -t sampleecr .
    #     docker tag sampleecr:latest ${{ secrets.ECR_REPOSITORY }}:latest

    # - name: Push to AWS ECR with echo
    #   run: |
    #     echo "Pushing Docker image to ECR..."
    #     docker push ${{ secrets.ECR_REPOSITORY }}:latest
    
    - name: Set up Serverless Access Key
      env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      run: echo "Serverless access key is " $SERVERLESS_ACCESS_KEY    
    
    - name: deploy
      env:
        SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      run: 
        sls remove 

    - name: Post-deployment notification
      if: success()
      run: echo "Removed Deployment"
